#!/usr/bin/env lamb

p ≔ ⟪print_result_string⟫
clock ≔ ⟪clock⟫

# type Nil, Cons(,)
cons ≔ λ. 1. A, B ↦ Cons(A, B)
head ≔ λ. 1. Cons(A, B) ↦ A
tail ≔ λ. 1. Cons(A, B) ↦ B

make_list$aux ≔ λ.
                1. acc, 0 ↦ acc
                2. acc, n ↦ μ(make_list$aux,
                              μ(cons, 1, acc),
                              μ(⟪minus_int⟫, n, 1))
make_list ≔ λ. 1. n ↦ μ(make_list$aux, Nil(), n)


time$cont4 ≔ λ.
             1. res, _           ↦ res
time$cont3 ≔ λ.
             1. res, diff        ↦ μ(time$cont4, res, μ(p, diff))
time$cont2 ≔ λ.
             1. res, start, stop ↦ μ(time$cont3,
                                     res,
                                     μ(⟪minus_float⟫, stop, start))
time$cont1 ≔ λ.
             1. res, start       ↦ μ(time$cont2, res, start, μ(clock))
time$cont0 ≔ λ.
             1. fun, arg, start  ↦ μ(time$cont1, μ(fun, arg), start)
time       ≔ λ.
             1. fun, arg         ↦ μ(time$cont0, fun, arg, μ(clock))

map ≔ λ.
      1. fun, Nil()      ↦ Nil()
      2. fun, Cons(A, B) ↦ Cons(μ(fun, A), μ(map, fun, B))

swap ≔ λ.
       1. 1 ↦ 0
       2. 0 ↦ 1

main$cont ≔ λ. 1. Box(fun, l) ↦ μ(map, fun, l)

num ≔ μ(λ.
        1. nil()      ↦ 5000000
        2. cons(h, _) ↦ μ(⟪strtol⟫, h), arguments)
l ≔ μ(make_list, num)
# l ≔ μ(make_list, 20000000)
μ(time, main$cont, Box(swap, l))